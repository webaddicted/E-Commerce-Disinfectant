# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    #    steps:
    #      - uses: actions/checkout@v3
    #      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
    #      - name: Install dependencies
    #        run: dart pub get
    #      - name: Analyze project source
    #        run: dart analyze
    #      - name: Run tests
    #        run: dart test
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # or: 'beta', 'dev' or 'master'
      - run: flutter --version
        # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # Statically analyze the Dart code for any errors.
      #      - run: flutter analyze .

      # Run widget tests for our flutter project.
      #      - run: flutter test

      # Build apk.
      - run: flutter build apk

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
#          path: apk/app1.apk
          path: build/app/outputs/apk/release/app-release.apk