# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    #    steps:
    #      - uses: actions/checkout@v3
    #      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
    #      - name: Install dependencies
    #        run: dart pub get
    #      - name: Analyze project source
    #        run: dart analyze
    #      - name: Run tests
    #        run: dart test
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # or: 'beta', 'dev' or 'master'
      - run: flutter --version
      - run: flutter pub get
      - name: Get dependencies
        run: flutter pub get
      #      - run: flutter analyze .
      #      - run: flutter test
      - run: flutter build apk
      - uses: actions/upload-artifact@v1


      - name: Start Android Release Build
        run: flutter build appbundle
      - name: Upload Android Release
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
#          name: android-release
#          path: build/app/outputs/bundle/release/app-release.aab



      - name: Start Web Release Build
        run: flutter build web --release

      - name: Upload Web Build Files
        uses: actions/upload-artifact@v2
        with:
          name: web-release
          path: ./build/web

#  deploy:
#    name: Deploy Android Build
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - name: Get Android Build from artifacts
#        uses: actions/download-artifact@v2
#        with:
#          name: android-release
#      - name: Release Build to internal track
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
#          packageName: <YOUR_PACKAGE_NAME>
#          releaseFiles: app-release.aab
#          track: alpha
#          status: completed